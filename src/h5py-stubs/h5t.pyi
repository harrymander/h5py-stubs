from _typeshed import Incomplete
from h5py._base_id import BaseID

def __getattr__(name: str) -> Incomplete: ...

class TypeID(BaseID): ...

# TODO (these are C extension functions)
def check_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def check_enum_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def check_opaque_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def check_ref_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def check_string_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def check_vlen_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def enum_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def opaque_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def ref_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def regionref_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def special_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def string_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
def vlen_dtype(*args: Incomplete, **kwargs: Incomplete) -> Incomplete: ...
