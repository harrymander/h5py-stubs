from collections.abc import ItemsView, KeysView, ValuesView
from os import PathLike
from typing import Any

import numpy as np
from h5py._hl.attrs import AttributeManager
from h5py.h5f import FileID
from h5py.h5r import Reference, RegionReference
from numpy.typing import DTypeLike

from .files import File

def is_hdf5(fname: str | bytes | PathLike[str]) -> bool: ...

class CommonStateObject: ...

class _RegionProxy:
    def __getitem__(self, args: Any) -> RegionReference: ...
    def shape(self, ref: RegionReference) -> tuple[int, ...]: ...
    def selection(self, ref: RegionReference) -> tuple[int, ...]: ...

class HLObject(CommonStateObject):
    @property
    def file(self) -> File: ...
    @property
    def name(self) -> str | None: ...
    @property
    def parent(self) -> HLObject: ...
    @property
    def id(self) -> FileID: ...
    @property
    def ref(self) -> Reference: ...
    @property
    def regionref(self) -> _RegionProxy: ...
    @property
    def attrs(self) -> AttributeManager: ...
    def __init__(self, oid) -> None: ...
    def __hash__(self) -> int: ...
    def __eq__(self, other) -> bool: ...

class KeysViewHDF5(KeysView[str]): ...
class ValuesViewHDF5(ValuesView[HLObject]): ...
class ItemsViewHDF5(ItemsView[str, HLObject]): ...

class Empty:
    @property
    def shape(self) -> None: ...
    @property
    def size(self) -> None: ...
    @property
    def dtype(self) -> np.dtype: ...
    def __init__(self, dtype: DTypeLike) -> None: ...
    def __eq__(self, other) -> bool: ...
