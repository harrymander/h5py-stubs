from collections.abc import Iterator
from typing import Any, override

from h5py._hl.dataset import Dataset
from typing_extensions import deprecated

from . import base

class DimensionProxy(base.CommonStateObject):
    @property
    def label(self) -> str: ...
    @label.setter
    def label(self, val: str | bytes) -> None:  # pyright: ignore[reportPropertyTypeMismatch]
        ...
    @override
    def __hash__(self) -> int: ...
    def __iter__(self) -> Iterator[str]: ...
    def __len__(self) -> int: ...
    def __getitem__(self, item: int | str) -> Dataset[Any]: ...
    def attach_scale(self, dset: Dataset[Any]) -> None: ...
    def detach_scale(self, dset: Dataset[Any]) -> None: ...
    def items(self) -> list[tuple[Any | None, Dataset[Any]]]: ...
    def keys(self) -> list[str]: ...
    def values(self) -> list[Dataset[Any]]: ...

class DimensionManager(base.CommonStateObject):
    def __getitem__(self, index: int) -> DimensionProxy: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator[DimensionProxy]: ...
    @deprecated("Use create_scale method of h5py.Dataset instead")
    def create_scale(self, dset: Dataset[Any], name: str = ...) -> None: ...
